package io.joern.solidity2cpg.vulnerability

import io.joern.solidity2cpg.testfixtures.SolidityCodeToCpgFixture
import io.shiftleft.codepropertygraph.generated.Operators
import io.shiftleft.semanticcpg.language.{toNodeTypeStarters, _}
class DelegateCallTest extends SolidityCodeToCpgFixture{
  override val code : String = {
    """
      |pragma solidity ^0.8.0;
      |contract Delegatecall{
      |    function delegate(address to, bytes data){
      |        to.delegatecall(data);
      |    }
      |}""".stripMargin



  }

  "delegate call " in {
    {
      def parameters = cpg.method
        .where(_.code("function.*"))
        .parameter
        .name
      def arg =  cpg.method
        .where(_.code("function.*"))
        .call
        .code(".*delegatecall.(.*?)")
        .isCall
        .argument
        .code.l.head
      def sender = cpg.method
        .where(_.code("function.*"))
        .call
        .code(".*delegatecall")
        .argument
        .isIdentifier
        .name.l.head
      parameters
    }
  }
}
