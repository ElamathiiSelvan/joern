{
  "bundler.Bundler.CompactIndexClient.CacheFile": [
    {
      "name": "bundler.Bundler.CompactIndexClient.CacheFile.ClosedError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.CacheFile.DigestMismatchError",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.DigestMismatchError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile.DigestMismatchError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.CacheFile.Error",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.PubGrub.VersionRange": [
    {
      "name": "bundler.Bundler.PubGrub.VersionRange.Empty",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.allows_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.intersect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.intersects",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.select_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.Empty.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange.Empty"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Settings": [
    {
      "name": "bundler.Bundler.Settings.Mirror",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.Mirror.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirror"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirror.fallback_timeout",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirror"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirror.uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirror"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirror.valid",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirror"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirror.validate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirror"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Settings.MirrorConfig",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.MirrorConfig.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.MirrorConfig"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.MirrorConfig.all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.MirrorConfig"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.MirrorConfig.update_mirror",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.MirrorConfig"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Settings.Mirrors",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.Mirrors.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirrors"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirrors.each",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirrors"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirrors.for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirrors"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Mirrors.parse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Mirrors"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Settings.TCPSocketProbe",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.TCPSocketProbe.replies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.TCPSocketProbe"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Settings.Validator",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.Validator.validate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Checksum": [
    {
      "name": "bundler.Bundler.Checksum.Source",
      "methods": [
        {
          "name": "bundler.Bundler.Checksum.Source.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Source.removable",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Source.removal",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Source.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Source"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Checksum.Store",
      "methods": [
        {
          "name": "bundler.Bundler.Checksum.Store.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Store.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Store.merge",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Store.register",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Store.replace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.Store.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum.Store"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.CLI": [
    {
      "name": "bundler.Bundler.CLI.Add",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Add.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Add"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Add.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Add"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Binstubs",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Binstubs.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Binstubs"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Binstubs.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Binstubs"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Cache",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Cache.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Cache.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Cache"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Check",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Check.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Check"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Check.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Check"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Clean",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Clean.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Clean"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Clean.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Clean"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Common",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Common.ask_for_spec_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.clean_after_install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.configure_gem_version_promoter",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.default_gem_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.ensure_all_gems_in_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.gem_not_found_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.output_fund_metadata_summary",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.output_post_install_messages",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.output_without_groups_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.patch_level_options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.print_post_install_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.select_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.verbalize_groups",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Common.without_groups_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Common"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Config",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Config.base",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.get",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.set",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.unset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Console",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Console.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Console"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Console.get_console",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Console"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Console.get_constant",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Console"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Console.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Console"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Doctor",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Doctor.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.bundles_for_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.check",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.dylibs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.dylibs_darwin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.dylibs_ldd",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.ldd_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.otool_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Doctor.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Doctor"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Exec",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Exec.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Exec"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Exec.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Exec"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Fund",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Fund.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Fund"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Fund.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Fund"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Gem",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Gem.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Gem"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Gem.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Gem"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Info",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Info.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Info"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Info.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Info"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Init",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Init.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Init"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Init.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Init"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Inject",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Inject.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Inject"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Inject.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Inject"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Install",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Install.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Install"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Install.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Install"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Issue",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Issue.doctor",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Issue"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Issue.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Issue"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.List",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.List.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.List"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.List.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.List"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Lock",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Lock.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Lock"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Lock.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Lock"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Open",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Open.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Open"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Open.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Open"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Outdated",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Outdated.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Outdated"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Outdated.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Outdated"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Platform",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Platform.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Platform"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Platform.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Platform"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Plugin",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Plugin.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Plugin.list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Plugin.uninstall",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Plugin"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Pristine",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Pristine.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Pristine"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Pristine.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Pristine"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Remove",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Remove.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Remove"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Remove.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Remove"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Show",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Show.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Show"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Show.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Show"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Update",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Update.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Update"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Update.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Update"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI.Viz",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Viz.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Viz"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Viz.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Viz"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.ConnectionPool": [
    {
      "name": "bundler.Bundler.ConnectionPool.Error",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool.ForkTracker",
      "methods": [
        {
          "name": "bundler.Bundler.ConnectionPool.ForkTracker._fork",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.ForkTracker"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool.PoolShuttingDownError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool.TimedStack",
      "methods": [
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.<<",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.length",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.pop",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.push",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.TimedStack.shutdown",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.TimedStack"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool.TimeoutError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool.Wrapper",
      "methods": [
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.method_missing",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.pool_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.pool_shutdown",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.pool_size",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.respond_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.with",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.Wrapper.wrapped_pool",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool.Wrapper"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.Actions": [
    {
      "name": "bundler.Bundler.Thor.Actions.CapturableERB",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Actions.CapturableERB.set_eoutvar",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions.CapturableERB"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Actions.ClassMethods",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Actions.ClassMethods.add_runtime_options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.ClassMethods.source_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.ClassMethods.source_paths_for_search",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.ClassMethods.source_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions.ClassMethods"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Fetcher": [
    {
      "name": "bundler.Bundler.Fetcher.AuthenticationForbiddenError",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.AuthenticationForbiddenError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.AuthenticationForbiddenError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.AuthenticationRequiredError",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.AuthenticationRequiredError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.AuthenticationRequiredError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.BadAuthenticationError",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.BadAuthenticationError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.BadAuthenticationError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.Base",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.Base.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Base.api_fetcher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Base.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Base.fetch_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Base.remote_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Base"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.CertificateFailureError",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.CertificateFailureError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CertificateFailureError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.CompactIndex",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.CompactIndex.compact_index_request",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CompactIndex"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.CompactIndex.api_fetcher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CompactIndex"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.CompactIndex.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CompactIndex"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.CompactIndex.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CompactIndex"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.CompactIndex.specs_for_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.CompactIndex"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.Dependency",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.Dependency.api_fetcher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.dependency_api_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.dependency_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.get_formatted_specs_and_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Dependency.unmarshalled_dep_gems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Dependency"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.Downloader",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.Downloader.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Downloader"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Downloader.fetch",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Downloader"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.Downloader.request",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Downloader"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.FallbackError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.GemRemoteFetcher",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.GemRemoteFetcher.request",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.GemRemoteFetcher"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.Index",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.Index.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.Index"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.NetworkDownError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.SSLError",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.SSLError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher.SSLError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher.TooManyRequestsError",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Plugin.DSL": [
    {
      "name": "bundler.Bundler.Plugin.DSL.PluginGemfileError",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.TSort": [
    {
      "name": "bundler.Bundler.TSort.Cyclic",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.Invocation": [
    {
      "name": "bundler.Bundler.Thor.Invocation.ClassMethods",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.Base": [
    {
      "name": "bundler.Bundler.Thor.Base.ClassMethods",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.all_commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.all_tasks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.allow_incompatible_default_type",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.argument",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.arguments",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.check_default_type",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.check_unknown_options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_at_least_one",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_at_least_one_option_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_exclusive",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_exclusive_option_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.class_options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.exit_on_failure",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.group",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.no_commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.no_commands_context",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.no_tasks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.public_command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.public_task",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.remove_argument",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.remove_class_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.remove_command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.remove_task",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.start",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.strict_args_position",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.ClassMethods.tasks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base.ClassMethods"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Gem": [
    {
      "name": "bundler.Gem.BasicSpecification",
      "methods": [
        {
          "name": "bundler.Gem.BasicSpecification.extensions_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.BasicSpecification"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Gem.Dependency",
      "methods": [
        {
          "name": "bundler.Gem.Dependency.encode_with",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Dependency"
          ]
        },
        {
          "name": "bundler.Gem.Dependency.force_ruby_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Dependency"
          ]
        },
        {
          "name": "bundler.Gem.Dependency.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Dependency"
          ]
        },
        {
          "name": "bundler.Gem.Dependency.to_yaml_properties",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Dependency"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Gem.NameTuple",
      "methods": [
        {
          "name": "bundler.Gem.NameTuple.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.NameTuple"
          ]
        },
        {
          "name": "bundler.Gem.NameTuple.lock_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.NameTuple"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Gem.Net",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Gem.Platform",
      "methods": [
        {
          "name": "bundler.Gem.Platform.normalized_linux_version_ext",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Platform"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Gem.Requirement",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Gem.Specification",
      "methods": [
        {
          "name": "bundler.Gem.Specification.deleted_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.extension_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.full_gem_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.gem_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.git_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.groups",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.load_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.loaded_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.nondevelopment_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.required_ruby_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.rg_extension_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.rg_full_gem_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.rg_loaded_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        },
        {
          "name": "bundler.Gem.Specification.to_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Specification"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Source": [
    {
      "name": "bundler.Bundler.Source.Gemspec",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Gemspec.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Gemspec"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Gemspec.as_path_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Gemspec"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.from_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.allow_git_ops",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.app_cache_dirname",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.cache_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.current_branch",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.extension_dir_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.identifier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.install_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.load_spec_files",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.local",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.local_override",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.revision",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.to_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.unlock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.uri_with_specifiers",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Metadata",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Metadata.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Metadata.version_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Metadata"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Path",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Path.from_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.app_cache_dirname",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.cached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.expanded_original_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.local_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Rubygems",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Rubygems.from_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.add_remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.cached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.cached_built_in_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.caches",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.can_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.dependency_api_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.dependency_names_to_double_check",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.double_check_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.fetchers",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.identifier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.local",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.local_only",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.multiple_remotes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.no_remotes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.remote_fetchers",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.spec_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.to_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.unmet_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.RubygemsAggregate",
      "methods": [
        {
          "name": "bundler.Bundler.Source.RubygemsAggregate.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.RubygemsAggregate"
          ]
        },
        {
          "name": "bundler.Bundler.Source.RubygemsAggregate.identifier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.RubygemsAggregate"
          ]
        },
        {
          "name": "bundler.Bundler.Source.RubygemsAggregate.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.RubygemsAggregate"
          ]
        },
        {
          "name": "bundler.Bundler.Source.RubygemsAggregate.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.RubygemsAggregate"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.GemHelpers": [
    {
      "name": "bundler.Bundler.GemHelpers.PlatformMatch",
      "methods": [
        {
          "name": "bundler.Bundler.GemHelpers.PlatformMatch.cpu_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers.PlatformMatch"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.PlatformMatch.os_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers.PlatformMatch"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.PlatformMatch.platform_version_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers.PlatformMatch"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.PlatformMatch.specificity_score",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers.PlatformMatch"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.CompactIndexClient": [
    {
      "name": "bundler.Bundler.CompactIndexClient.Cache",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.checksums",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.info_etag_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.info_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.names_etag_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.names_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.versions_etag_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Cache.versions_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Cache"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.CacheFile",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.copy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.write",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.append",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.close",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.commit",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.digests",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.initialize_digests",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.md5",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.open",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.reset_digests",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.size",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.CacheFile.verify",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.CacheFile"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.Error",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.GemParser",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.GemParser.parse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.GemParser"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient.Updater",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.Updater.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Updater"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.Updater.update",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Updater"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.CLI.Config": [
    {
      "name": "bundler.Bundler.CLI.Config.Base",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.Config.Base.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.confirm",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.confirm_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.explicit_scope",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.new_value",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.show_pretty_values_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.validate_scope",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.Config.Base.warn_unused_scope",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI.Config.Base"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Settings.Validator": [
    {
      "name": "bundler.Bundler.Settings.Validator.Rule",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.Validator.Rule.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator.Rule"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Validator.Rule.fail",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator.Rule"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Validator.Rule.k",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator.Rule"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Validator.Rule.set",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator.Rule"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.Validator.Rule.validate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings.Validator.Rule"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.FileUtils": [
    {
      "name": "bundler.Bundler.FileUtils.DryRun",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FileUtils.NoWrite",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FileUtils.StreamUtils_",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FileUtils.Verbose",
      "methods": [],
      "fields": []
    }
  ],
  "bundler": [
    {
      "name": "bundler.Bundler",
      "methods": [
        {
          "name": "bundler.Bundler.URI",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.app_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.app_config_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.bin_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.bundle_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.bundler_major_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.clean_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.clean_exec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.clean_system",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.clear_gemspec_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.configure",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.configure_gem_home_and_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.configured_bundle_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.create_bundle_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.current_ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.default_bundle_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.default_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.default_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.definition",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.environment",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.feature_flag",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.frozen_bundle",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.gem_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.git_present",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.home",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.install_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.load",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.load_gemspec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.load_gemspec_uncached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.local_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.locked_gems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.mkdir_p",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.most_specific_locked_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.original_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.original_exec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.original_system",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.preferred_gemfile_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.read_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.require",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.require_thor_actions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.reset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.reset_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.reset_rubygems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.reset_settings_and_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.rm_rf",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.ruby_scope",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.rubygems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.safe_load_marshal",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.self_manager",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.settings",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.setup",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.specs_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.system_bindir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.tmp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.ui",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.unbundled_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.unbundled_exec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.unbundled_system",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.use_system_gems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.user_bundle_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.user_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.user_home",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.which",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.with_clean_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.with_friendly_errors",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.with_original_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        },
        {
          "name": "bundler.Bundler.with_unbundled_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Gem",
      "methods": [
        {
          "name": "bundler.Gem.match_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem"
          ]
        },
        {
          "name": "bundler.Gem.match_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem"
          ]
        },
        {
          "name": "bundler.Gem.match_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Object",
      "methods": [
        {
          "name": "bundler.Object.gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Object"
          ]
        },
        {
          "name": "bundler.Object.namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Object"
          ]
        },
        {
          "name": "bundler.Object.rake_namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Object"
          ]
        },
        {
          "name": "bundler.Object.task",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Object"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.PubGrub.StaticPackageSource": [
    {
      "name": "bundler.Bundler.PubGrub.StaticPackageSource.DSL",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.DSL.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource.DSL"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.DSL.add",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource.DSL"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.DSL.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource.DSL"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Gem.Net": [
    {
      "name": "bundler.Gem.Net.HTTP",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.RubygemsIntegration": [
    {
      "name": "bundler.Bundler.RubygemsIntegration.Gem",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.LineEditor": [
    {
      "name": "bundler.Bundler.Thor.LineEditor.Basic",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.LineEditor.Basic.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.LineEditor.Basic.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.LineEditor.Basic.readline",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Basic"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.LineEditor.Readline",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.LineEditor.Readline.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Readline"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.LineEditor.Readline.readline",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Readline"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Source.Git": [
    {
      "name": "bundler.Bundler.Source.Git.AmbiguousGitReference",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.AmbiguousGitReference.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.AmbiguousGitReference"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git.GitCommandError",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.GitCommandError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitCommandError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git.GitNotAllowedError",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.GitNotAllowedError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitNotAllowedError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git.GitNotInstalledError",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.GitNotInstalledError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitNotInstalledError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git.GitProxy",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.checkout",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.contains",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.copy_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.current_branch",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.full_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.revision",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Git.GitProxy.version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.GitProxy"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source.Git.MissingGitRevisionError",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Git.MissingGitRevisionError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Git.MissingGitRevisionError"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Resolver": [
    {
      "name": "bundler.Bundler.Resolver.Base",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.Base.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.[]",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.base_requirements",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.delete",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.get_package",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.include_prereleases",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Base.unlock_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Base"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver.Candidate",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.Candidate.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.<>",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.generic",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.platform_specific",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.prerelease",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.segments",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.sort_obj",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Candidate.to_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Candidate"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver.Incompatibility",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.Incompatibility.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Incompatibility"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver.Package",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.Package.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.consider_prereleases",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.current_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.force_ruby_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.ignores_prereleases",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.meta",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.prerelease_specified",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.top_level",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Package.unlock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Package"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver.Root",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.Root.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Root"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Root.meta",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Root"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.Root.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.Root"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver.SpecGroup",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.to_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.SpecGroup.version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver.SpecGroup"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Plugin": [
    {
      "name": "bundler.Bundler.Plugin.API",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.API.command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.hook",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.cache_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.method_missing",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.respond_to_missing",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.tmp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.DSL",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.DSL.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.DSL"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.DSL.method_missing",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.DSL"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.DSL.plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.DSL"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.DSL.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.DSL"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.Events",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Events.defined_event",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Events"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.Index",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Index.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.command_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.global_index_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.hook_plugins",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.index_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.installed_in_plugin_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.installed_plugins",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.load_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.local_index_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.plugin_commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.plugin_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.register_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.source_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Index.unregister_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.Installer",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Installer.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Installer.install_definition",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.MalformattedPlugin",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.PluginInstallError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.SourceList",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.SourceList.add_git_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.SourceList.add_rubygems_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.SourceList.all_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.SourceList.default_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.SourceList"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.UndefinedCommandError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.UnknownSourceError",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Plugin.Index": [
    {
      "name": "bundler.Bundler.Plugin.Index.CommandConflict",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Index.CommandConflict.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index.CommandConflict"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.Index.SourceConflict",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Index.SourceConflict.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Index.SourceConflict"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Plugin.Installer": [
    {
      "name": "bundler.Bundler.Plugin.Installer.Git",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.Installer.Git.cache_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Installer.Git.generate_bin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Installer.Git.install_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer.Git"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.Installer.Git.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.Installer.Git"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin.Installer.Rubygems",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.URI.RFC2396_REGEXP": [
    {
      "name": "bundler.Bundler.URI.RFC2396_REGEXP.PATTERN",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.CompactIndexClient.Updater": [
    {
      "name": "bundler.Bundler.CompactIndexClient.Updater.MismatchedChecksumError",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.Updater.MismatchedChecksumError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient.Updater.MismatchedChecksumError"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Graph": [
    {
      "name": "bundler.Bundler.Graph.GraphVizClient",
      "methods": [
        {
          "name": "bundler.Bundler.Graph.GraphVizClient.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Graph.GraphVizClient"
          ]
        },
        {
          "name": "bundler.Bundler.Graph.GraphVizClient.g",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Graph.GraphVizClient"
          ]
        },
        {
          "name": "bundler.Bundler.Graph.GraphVizClient.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Graph.GraphVizClient"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Gem.Net.HTTP": [
    {
      "name": "bundler.Gem.Net.HTTP.Persistent",
      "methods": [
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.detect_idle_timeout",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ca_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ca_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.cert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.cert_store",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.certificate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ciphers",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.connection_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.escape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.expired",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.finish",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.http_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.key",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.max_retries",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.max_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.min_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.normalize_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.private_key",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.proxy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.proxy_bypass",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.proxy_from_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.reconnect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.reconnect_ssl",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.request",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.reset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.shutdown",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ssl",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ssl_timeout",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.ssl_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.start",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.unescape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.verify_callback",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.verify_depth",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        },
        {
          "name": "bundler.Gem.Net.HTTP.Persistent.verify_mode",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Net.HTTP.Persistent"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.UnknownArgumentError": [
    {
      "name": "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker.corrections",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker.spell_checker",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UnknownArgumentError.SpellChecker"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.ParallelInstaller": [
    {
      "name": "bundler.Bundler.ParallelInstaller.SpecInstallation",
      "methods": [
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.all_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.dependencies_installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.enqueued",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.failed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.has_post_install_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.ignorable_dependency",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.ready_to_enqueue",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.SpecInstallation.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller.SpecInstallation"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.UndefinedCommandError": [
    {
      "name": "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker.corrections",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker.spell_checker",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UndefinedCommandError.SpellChecker"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.Shell": [
    {
      "name": "bundler.Bundler.Thor.Shell.Basic",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.ask",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.file_collision",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.indent",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.mute",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.no",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.padding",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.print_in_columns",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.print_table",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.print_wrapped",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.say",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.say_error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.say_status",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Basic.yes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Basic"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.Color",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.Color.set_color",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Color"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.ColumnPrinter",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.ColumnPrinter.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.ColumnPrinter"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.ColumnPrinter.print",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.ColumnPrinter"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.HTML",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.HTML.ask",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.HTML"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.HTML.set_color",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.HTML"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.TablePrinter",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.TablePrinter.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.TablePrinter"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.TablePrinter.print",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.TablePrinter"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.Terminal",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.Terminal.terminal_width",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Terminal"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.Terminal.unix",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.Terminal"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell.WrappedPrinter",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.WrappedPrinter.print",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell.WrappedPrinter"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.URI": [
    {
      "name": "bundler.Bundler.URI.BadURIError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.Error",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.FTP",
      "methods": [
        {
          "name": "bundler.Bundler.URI.FTP.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.FTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.FTP.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.FTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.FTP.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.FTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.FTP.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.FTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.FTP.typecode",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.FTP"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.File",
      "methods": [
        {
          "name": "bundler.Bundler.URI.File.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.check_password",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.check_user",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.check_userinfo",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.set_host",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.set_password",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.set_port",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.set_user",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        },
        {
          "name": "bundler.Bundler.URI.File.set_userinfo",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.File"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.Generic",
      "methods": [
        {
          "name": "bundler.Bundler.URI.Generic.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.build2",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.default_port",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.+",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.-",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.absolute",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.coerce",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.decoded_password",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.decoded_user",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.find_proxy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.fragment",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.hierarchical",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.host",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.hostname",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.merge",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.normalize",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.opaque",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.parser",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.password",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.port",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.query",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.registry",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.relative",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.route_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.route_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.scheme",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.select",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.to_str",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.user",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        },
        {
          "name": "bundler.Bundler.URI.Generic.userinfo",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.Generic"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.HTTP",
      "methods": [
        {
          "name": "bundler.Bundler.URI.HTTP.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.HTTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.HTTP.authority",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.HTTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.HTTP.origin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.HTTP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.HTTP.request_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.HTTP"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.HTTPS",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.InvalidComponentError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.InvalidURIError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.LDAP",
      "methods": [
        {
          "name": "bundler.Bundler.URI.LDAP.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.attributes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.dn",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.filter",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.hierarchical",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        },
        {
          "name": "bundler.Bundler.URI.LDAP.scope",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.LDAP"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.LDAPS",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.MailTo",
      "methods": [
        {
          "name": "bundler.Bundler.URI.MailTo.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.headers",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.to_mailtext",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.to_rfc822text",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        },
        {
          "name": "bundler.Bundler.URI.MailTo.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.MailTo"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.RFC2396_Parser",
      "methods": [
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.escape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.extract",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.join",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.make_regexp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.parse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.split",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.unescape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.RFC2396_REGEXP",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.RFC2396_Parser",
      "methods": [
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.escape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.extract",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.join",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.make_regexp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.parse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.split",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        },
        {
          "name": "bundler.Bundler.URI.RFC2396_Parser.unescape",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.RFC2396_Parser"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.RFC2396_REGEXP",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.Schemes",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.WS",
      "methods": [
        {
          "name": "bundler.Bundler.URI.WS.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.WS"
          ]
        },
        {
          "name": "bundler.Bundler.URI.WS.request_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI.WS"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI.WSS",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Gem.Requirement": [
    {
      "name": "bundler.Gem.Requirement.CorrectHashForLambdaOperator",
      "methods": [
        {
          "name": "bundler.Gem.Requirement.CorrectHashForLambdaOperator.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Gem.Requirement.CorrectHashForLambdaOperator"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Source.Path": [
    {
      "name": "bundler.Bundler.Source.Path.Installer",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Path.Installer.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Path.Installer.post_install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Path.Installer"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.PubGrub": [
    {
      "name": "bundler.Bundler.PubGrub.Assignment",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.Assignment.decision",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Assignment"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Assignment.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Assignment"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.BasicPackageSource",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.all_versions_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.dependencies_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.incompatibilities_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.no_versions_incompatibility_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.parse_dependency",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.root_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.sort_versions_by_preferred",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.BasicPackageSource.versions_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.BasicPackageSource"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.FailureWriter",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.FailureWriter.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.FailureWriter"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.FailureWriter.write",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.FailureWriter"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.Incompatibility",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.conflict",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.external_incompatibilities",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.failure",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.pretty_print",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Incompatibility.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Incompatibility"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.Package",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.Package.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Package.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Package.root_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Package.<>",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Package.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Package.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Package"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.PartialSolution",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.backtrack",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.decide",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.decision_level",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.derive",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.relation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.satisfier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.satisfies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.PartialSolution.unsatisfied",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.PartialSolution"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.RubyGems",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.RubyGems.parse_constraint",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.RubyGems"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.RubyGems.parse_range",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.RubyGems"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.RubyGems.requirement_to_constraint",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.RubyGems"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.RubyGems.requirement_to_range",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.RubyGems"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.SolveFailure",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.SolveFailure.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.SolveFailure"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.SolveFailure.explanation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.SolveFailure"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.SolveFailure.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.SolveFailure"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.StaticPackageSource",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.all_versions_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.dependencies_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.parse_dependency",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.StaticPackageSource.root_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.StaticPackageSource"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.Term",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.Term.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.difference",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.intersect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.inverse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.negative",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.normalized_constraint",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.positive",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.relation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.satisfies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.Term.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.Term"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.VersionConstraint",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.exact",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.allows_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.allows_any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.constraint_string",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.difference",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.disjoint",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.intersect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.overlap",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.relation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.subset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionConstraint.union",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionConstraint"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.VersionRange",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.allows_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.allows_any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.compare_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.contiguous_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.intersect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.intersects",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.partition_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.ranges",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.select_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.span",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.strictly_higher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.strictly_lower",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.union",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionRange.upper_invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionRange"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.VersionSolver",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.VersionSolver.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionSolver"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionSolver.result",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionSolver"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionSolver.solve",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionSolver"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionSolver.solved",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionSolver"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionSolver.work",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionSolver"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub.VersionUnion",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.normalize_ranges",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.union",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.allows_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.allows_any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.intersect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.intersects",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.select_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        },
        {
          "name": "bundler.Bundler.PubGrub.VersionUnion.upper_invert",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub.VersionUnion"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler": [
    {
      "name": "bundler.Bundler.APIResponseInvalidDependenciesError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.APIResponseMismatchError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.BuildMetadata",
      "methods": [
        {
          "name": "bundler.Bundler.BuildMetadata.built_at",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BuildMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.BuildMetadata.git_commit_sha",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BuildMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.BuildMetadata.release",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BuildMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.BuildMetadata.to_h",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BuildMetadata"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.BundlerError",
      "methods": [
        {
          "name": "bundler.Bundler.BundlerError.all_errors",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BundlerError"
          ]
        },
        {
          "name": "bundler.Bundler.BundlerError.status_code",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.BundlerError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CIDetector",
      "methods": [
        {
          "name": "bundler.Bundler.CIDetector.ci",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CIDetector"
          ]
        },
        {
          "name": "bundler.Bundler.CIDetector.ci_strings",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CIDetector"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CLI",
      "methods": [
        {
          "name": "bundler.Bundler.CLI.aliases_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.all_aliases",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.check_deprecated_ext_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.deprecated_ext_value",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.dispatch",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.handle_no_command_error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.reformatted_help_args",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.source_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.start",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.add",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.binstubs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.check",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.clean",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.cli_help",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.console",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.doctor",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.exec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.fund",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.help",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.info",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.init",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.inject",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.issue",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.licenses",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.open",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.outdated",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.pristine",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.remove",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.show",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.update",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        },
        {
          "name": "bundler.Bundler.CLI.viz",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CLI"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Checksum",
      "methods": [
        {
          "name": "bundler.Bundler.Checksum.from_api",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.from_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.from_gem_package",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.from_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.to_hexdigest",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.formatted_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.merge",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.removable",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.removal_instructions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.same_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        },
        {
          "name": "bundler.Bundler.Checksum.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Checksum"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ChecksumMismatchError",
      "methods": [
        {
          "name": "bundler.Bundler.ChecksumMismatchError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ChecksumMismatchError"
          ]
        },
        {
          "name": "bundler.Bundler.ChecksumMismatchError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ChecksumMismatchError"
          ]
        },
        {
          "name": "bundler.Bundler.ChecksumMismatchError.mismatch_resolution_instructions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ChecksumMismatchError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CompactIndexClient",
      "methods": [
        {
          "name": "bundler.Bundler.CompactIndexClient.debug",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.execution_mode",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.sequential_execution_mode",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.sequentially",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.update_and_parse_checksums",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        },
        {
          "name": "bundler.Bundler.CompactIndexClient.versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CompactIndexClient"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ConnectionPool",
      "methods": [
        {
          "name": "bundler.Bundler.ConnectionPool.after_fork",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.wrap",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.checkin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.checkout",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.reload",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.shutdown",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.then",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        },
        {
          "name": "bundler.Bundler.ConnectionPool.with",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ConnectionPool"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CurrentRuby",
      "methods": [
        {
          "name": "bundler.Bundler.CurrentRuby.jruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.maglev",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.mingw",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.mri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.mswin64",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.mswin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.rbx",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.truffleruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.windows",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        },
        {
          "name": "bundler.Bundler.CurrentRuby.x64_mingw",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.CurrentRuby"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.CyclicDependencyError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Definition",
      "methods": [
        {
          "name": "bundler.Bundler.Definition.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.add_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.bundler_version_to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.current_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.current_locked_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.deleted_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.dependencies_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.ensure_equivalent_gemfile_and_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.filter_relevant",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.gem_version_promoter",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.groups",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.locked_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.locked_ruby_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.locked_ruby_version_object",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.missing_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.most_specific_locked_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.new_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.new_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.no_resolve_needed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.nothing_changed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.remove_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.removed_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.requested_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.requested_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.resolution_mode",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.resolve",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.resolve_only_locally",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.resolve_remotely",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.resolve_with_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.setup_sources_for_resolve",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.should_complete_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.spec_git_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.specs_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.unlocking",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.validate_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.validate_ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        },
        {
          "name": "bundler.Bundler.Definition.validate_runtime",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Definition"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Dependency",
      "methods": [
        {
          "name": "bundler.Bundler.Dependency.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.current_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.current_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.expanded_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.gem_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.gemspec_dev_dep",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.should_include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.specific",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        },
        {
          "name": "bundler.Bundler.Dependency.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dependency"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Deployment",
      "methods": [
        {
          "name": "bundler.Bundler.Deployment.define_task",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Deployment"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Deprecate",
      "methods": [
        {
          "name": "bundler.Bundler.Deprecate.skip",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Deprecate"
          ]
        },
        {
          "name": "bundler.Bundler.Deprecate.skip_during",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Deprecate"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.DeprecatedError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Digest",
      "methods": [
        {
          "name": "bundler.Bundler.Digest.sha1",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Digest"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.DirectoryRemovalError",
      "methods": [
        {
          "name": "bundler.Bundler.DirectoryRemovalError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.DirectoryRemovalError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Dsl",
      "methods": [
        {
          "name": "bundler.Bundler.Dsl.evaluate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.check_primary_source_safety",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.eval_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.gemspec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.git",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.git_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.github",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.group",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.install_if",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.method_missing",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.to_definition",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.EndpointSpecification",
      "methods": [
        {
          "name": "bundler.Bundler.EndpointSpecification.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.__swap__",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification._local_specification",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.bindir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.executables",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.fetch_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.load_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.post_install_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.EndpointSpecification.require_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EndpointSpecification"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Env",
      "methods": [
        {
          "name": "bundler.Bundler.Env.environment",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Env"
          ]
        },
        {
          "name": "bundler.Bundler.Env.report",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Env"
          ]
        },
        {
          "name": "bundler.Bundler.Env.write",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Env"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.EnvironmentPreserver",
      "methods": [
        {
          "name": "bundler.Bundler.EnvironmentPreserver.env_to_hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        },
        {
          "name": "bundler.Bundler.EnvironmentPreserver.from_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        },
        {
          "name": "bundler.Bundler.EnvironmentPreserver.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        },
        {
          "name": "bundler.Bundler.EnvironmentPreserver.backup",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        },
        {
          "name": "bundler.Bundler.EnvironmentPreserver.replace_with_backup",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        },
        {
          "name": "bundler.Bundler.EnvironmentPreserver.restore",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.EnvironmentPreserver"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FeatureFlag",
      "methods": [
        {
          "name": "bundler.Bundler.FeatureFlag.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FeatureFlag"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FetchMetadata",
      "methods": [
        {
          "name": "bundler.Bundler.FetchMetadata.matches_current_ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FetchMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.FetchMetadata.matches_current_rubygems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FetchMetadata"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Fetcher",
      "methods": [
        {
          "name": "bundler.Bundler.Fetcher.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.api_fetcher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.fetch_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.gem_remote_fetcher",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.http_proxy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.specs_with_retry",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        },
        {
          "name": "bundler.Bundler.Fetcher.user_agent",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Fetcher"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FileUtils",
      "methods": [
        {
          "name": "bundler.Bundler.FileUtils.cd",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.chdir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.chmod",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.chmod_R",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.chown",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.chown_R",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.cmp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.collect_method",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.compare_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.compare_stream",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.copy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.copy_entry",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.copy_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.copy_stream",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.cp",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.cp_lr",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.cp_r",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.getwd",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.have_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.identical",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.link",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.link_entry",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.ln",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.ln_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.ln_sf",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.ln_sr",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.makedirs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.mkdir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.mkdir_p",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.mkpath",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.move",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.mv",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.options",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.options_of",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.pwd",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.remove",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.remove_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.remove_entry",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.remove_entry_secure",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.remove_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rm",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rm_f",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rm_r",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rm_rf",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rmdir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.rmtree",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.safe_unlink",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.symlink",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.touch",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        },
        {
          "name": "bundler.Bundler.FileUtils.uptodate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FileUtils"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ForcePlatform",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.FriendlyErrors",
      "methods": [
        {
          "name": "bundler.Bundler.FriendlyErrors.disable",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.disabled",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.enable",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.exception_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.exit_status",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.issues_url",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.log_error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.new_issue_url",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.request_issue_report_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        },
        {
          "name": "bundler.Bundler.FriendlyErrors.serialized_exception_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.FriendlyErrors"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemHelper",
      "methods": [
        {
          "name": "bundler.Bundler.GemHelper.gemspec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.install_tasks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.tag_prefix",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.build_checksum",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.build_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelper.install_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelper"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemHelpers",
      "methods": [
        {
          "name": "bundler.Bundler.GemHelpers.force_ruby_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.generic",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.generic_local_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.generic_local_platform_is_ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.local_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.platform_specificity_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.same_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.same_specificity",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.select_best_platform_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.GemHelpers.sort_best_platform_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemHelpers"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemInstaller",
      "methods": [
        {
          "name": "bundler.Bundler.GemInstaller.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.GemInstaller.install_from_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemInstaller"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemNotFound",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemRequireError",
      "methods": [
        {
          "name": "bundler.Bundler.GemRequireError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemRequireError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemVersionPromoter",
      "methods": [
        {
          "name": "bundler.Bundler.GemVersionPromoter.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        },
        {
          "name": "bundler.Bundler.GemVersionPromoter.level",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        },
        {
          "name": "bundler.Bundler.GemVersionPromoter.major",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        },
        {
          "name": "bundler.Bundler.GemVersionPromoter.minor",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        },
        {
          "name": "bundler.Bundler.GemVersionPromoter.pre",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        },
        {
          "name": "bundler.Bundler.GemVersionPromoter.sort_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GemVersionPromoter"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemfileError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemfileEvalError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemfileLockNotFound",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemfileNotFound",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GemspecError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GenericSystemCallError",
      "methods": [
        {
          "name": "bundler.Bundler.GenericSystemCallError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.GenericSystemCallError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.GitError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Graph",
      "methods": [
        {
          "name": "bundler.Bundler.Graph.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Graph"
          ]
        },
        {
          "name": "bundler.Bundler.Graph.viz",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Graph"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.HTTPError",
      "methods": [
        {
          "name": "bundler.Bundler.HTTPError.filter_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.HTTPError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Index",
      "methods": [
        {
          "name": "bundler.Bundler.Index.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.<<",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.[]",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.add",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.add_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.dependencies_eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.dependency_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.each",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.initialize_copy",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.local_search",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.merge",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.search",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.search_all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.size",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.spec_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.subset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.unmet_dependency_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        },
        {
          "name": "bundler.Bundler.Index.use",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Index"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Injector",
      "methods": [
        {
          "name": "bundler.Bundler.Injector.inject",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Injector"
          ]
        },
        {
          "name": "bundler.Bundler.Injector.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Injector"
          ]
        },
        {
          "name": "bundler.Bundler.Injector.remove",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Injector"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.InsecureInstallPathError",
      "methods": [
        {
          "name": "bundler.Bundler.InsecureInstallPathError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.InsecureInstallPathError"
          ]
        },
        {
          "name": "bundler.Bundler.InsecureInstallPathError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.InsecureInstallPathError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.InstallError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.InstallHookError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Installer",
      "methods": [
        {
          "name": "bundler.Bundler.Installer.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Installer.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Installer.generate_bundler_executable_stubs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Installer.generate_standalone_bundler_executable_stubs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Installer"
          ]
        },
        {
          "name": "bundler.Bundler.Installer.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Installer"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.InvalidOption",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.LazySpecification",
      "methods": [
        {
          "name": "bundler.Bundler.LazySpecification.from_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.__materialize__",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.force_ruby_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.full_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.git_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.lock_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.materialize_for_installation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.name_tuple",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.satisfies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        },
        {
          "name": "bundler.Bundler.LazySpecification.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LazySpecification"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.LockfileError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.LockfileGenerator",
      "methods": [
        {
          "name": "bundler.Bundler.LockfileGenerator.generate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileGenerator"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileGenerator.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileGenerator"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.LockfileParser",
      "methods": [
        {
          "name": "bundler.Bundler.LockfileParser.bundled_with",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.sections_in_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.sections_to_ignore",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.unknown_sections_in_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.may_include_redundant_platform_specific_gems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.MarshalError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.MatchMetadata",
      "methods": [
        {
          "name": "bundler.Bundler.MatchMetadata.matches_current_metadata",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MatchMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.MatchMetadata.matches_current_ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MatchMetadata"
          ]
        },
        {
          "name": "bundler.Bundler.MatchMetadata.matches_current_rubygems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MatchMetadata"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.MatchPlatform",
      "methods": [
        {
          "name": "bundler.Bundler.MatchPlatform.platforms_match",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MatchPlatform"
          ]
        },
        {
          "name": "bundler.Bundler.MatchPlatform.match_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MatchPlatform"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.MatchRemoteMetadata",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.MirrorSockets",
      "methods": [
        {
          "name": "bundler.Bundler.MirrorSockets.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MirrorSockets"
          ]
        },
        {
          "name": "bundler.Bundler.MirrorSockets.any",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.MirrorSockets"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.NoSpaceOnDeviceError",
      "methods": [
        {
          "name": "bundler.Bundler.NoSpaceOnDeviceError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.NoSpaceOnDeviceError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.OperationNotSupportedError",
      "methods": [
        {
          "name": "bundler.Bundler.OperationNotSupportedError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.OperationNotSupportedError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ParallelInstaller",
      "methods": [
        {
          "name": "bundler.Bundler.ParallelInstaller.call",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.ParallelInstaller.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ParallelInstaller"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PathError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PermissionError",
      "methods": [
        {
          "name": "bundler.Bundler.PermissionError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PermissionError"
          ]
        },
        {
          "name": "bundler.Bundler.PermissionError.action",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PermissionError"
          ]
        },
        {
          "name": "bundler.Bundler.PermissionError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PermissionError"
          ]
        },
        {
          "name": "bundler.Bundler.PermissionError.parent_folder",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PermissionError"
          ]
        },
        {
          "name": "bundler.Bundler.PermissionError.permission_type",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PermissionError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Persistent",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Plugin",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.add_command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.add_hook",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.add_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.exec_command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.from_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.gemfile_install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.global_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.hook",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.index",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.load_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.loaded",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.local_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.register_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.reset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.save_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.save_plugins",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.uninstall",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.validate_plugin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PluginError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ProcessLock",
      "methods": [
        {
          "name": "bundler.Bundler.ProcessLock.lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.ProcessLock"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ProductionError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.PubGrub",
      "methods": [
        {
          "name": "bundler.Bundler.PubGrub.logger",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.PubGrub"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RemoteSpecification",
      "methods": [
        {
          "name": "bundler.Bundler.RemoteSpecification.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.<>",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.__swap__",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.fetch_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.full_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.git_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.respond_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.runtime_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.sort_obj",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.RemoteSpecification.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RemoteSpecification"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Resolver",
      "methods": [
        {
          "name": "bundler.Bundler.Resolver.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.all_versions_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.bundler_pinned_to_current_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.debug",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.default_bundler_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.find_names_to_relax",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.incompatibilities_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.name_for_explicit_dependency_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.no_versions_incompatibility_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.parse_dependency",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.raise_not_found",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.setup_solver",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.solve_versions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.source_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.start",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        },
        {
          "name": "bundler.Bundler.Resolver.versions_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Resolver"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Retry",
      "methods": [
        {
          "name": "bundler.Bundler.Retry.attempts",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Retry"
          ]
        },
        {
          "name": "bundler.Bundler.Retry.default_attempts",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Retry"
          ]
        },
        {
          "name": "bundler.Bundler.Retry.default_retries",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Retry"
          ]
        },
        {
          "name": "bundler.Bundler.Retry.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Retry"
          ]
        },
        {
          "name": "bundler.Bundler.Retry.attempt",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Retry"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RubyDsl",
      "methods": [
        {
          "name": "bundler.Bundler.RubyDsl.normalize_ruby_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyDsl"
          ]
        },
        {
          "name": "bundler.Bundler.RubyDsl.ruby",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyDsl"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RubyGemsGemInstaller",
      "methods": [
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.build_extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.check_executable_overwrite",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.gem_checksum",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.generate_plugins",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.pre_install_checks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        },
        {
          "name": "bundler.Bundler.RubyGemsGemInstaller.spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyGemsGemInstaller"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RubyVersion",
      "methods": [
        {
          "name": "bundler.Bundler.RubyVersion.from_string",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.system",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.diff",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.host",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.single_version_string",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        },
        {
          "name": "bundler.Bundler.RubyVersion.versions_string",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubyVersion"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RubyVersionMismatch",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.RubygemsIntegration",
      "methods": [
        {
          "name": "bundler.Bundler.RubygemsIntegration.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.add_default_gems_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.all_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.bin_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.build",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.build_args",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.build_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.clear_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.default_stubs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.download_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.ext_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.fetch_all_remote_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.fetch_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.find_bundler",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.find_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.gem_bindir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.gem_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.gem_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.gem_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.inflate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.loaded_gem_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.loaded_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.mark_loaded",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.marshal_spec_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.method_visibility",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.path_separator",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.plain_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.post_reset_hooks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.provides",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.read_binary",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.redefine_method",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.replace_bin_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.replace_entrypoints",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.replace_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.reset",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.reverse_rubygems_kernel_mixin",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.ruby_engine",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.security_policies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.security_policy_keys",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.set_installed_by_version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.spec_cache_dirs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.spec_from_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.spec_matches_for_glob",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.spec_missing_extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.stub_rubygems",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.stub_set_spec",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.suffix_pattern",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.supports_bundler_trampolining",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.ui",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.undo_replacements",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.user_home",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.validate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        },
        {
          "name": "bundler.Bundler.RubygemsIntegration.version",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.RubygemsIntegration"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Runtime",
      "methods": [
        {
          "name": "bundler.Bundler.Runtime.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.clean",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.prune_cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.require",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        },
        {
          "name": "bundler.Bundler.Runtime.setup",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Runtime"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SafeMarshal",
      "methods": [
        {
          "name": "bundler.Bundler.SafeMarshal.proc",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SafeMarshal"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SecurityError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SelfManager",
      "methods": [
        {
          "name": "bundler.Bundler.SelfManager.install_locked_bundler_and_restart_with_it_if_needed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SelfManager"
          ]
        },
        {
          "name": "bundler.Bundler.SelfManager.restart_with_locked_bundler_if_needed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SelfManager"
          ]
        },
        {
          "name": "bundler.Bundler.SelfManager.update_bundler_and_restart_with_it_if_needed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SelfManager"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Settings",
      "methods": [
        {
          "name": "bundler.Bundler.Settings.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.[]",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.all",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.app_cache_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.credentials_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.gem_mirrors",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.ignore_config",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.key_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.local_overrides",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.locations",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.mirror_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.pretty_values_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.processor_count",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.set_command_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.set_command_option_if_given",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.set_global",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.set_local",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.temporary",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        },
        {
          "name": "bundler.Bundler.Settings.validate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Settings"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SharedHelpers",
      "methods": [
        {
          "name": "bundler.Bundler.SharedHelpers.bundle_bin_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.chdir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.checksum_for_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.default_bundle_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.default_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.default_lockfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.digest",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.ensure_same_dependencies",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.filesystem_access",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.in_bundle",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.major_deprecation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.md5_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.pretty_dependency",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.print_major_deprecations",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.pwd",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.relative_gemfile_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.relative_lockfile_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.relative_path_to",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.set_bundle_environment",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.set_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.with_clean_git_env",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        },
        {
          "name": "bundler.Bundler.SharedHelpers.write_to_gemfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SharedHelpers"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SimilarityDetector",
      "methods": [
        {
          "name": "bundler.Bundler.SimilarityDetector.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SimilarityDetector"
          ]
        },
        {
          "name": "bundler.Bundler.SimilarityDetector.similar_word_list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SimilarityDetector"
          ]
        },
        {
          "name": "bundler.Bundler.SimilarityDetector.similar_words",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SimilarityDetector"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SocketAddress",
      "methods": [
        {
          "name": "bundler.Bundler.SocketAddress.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SocketAddress"
          ]
        },
        {
          "name": "bundler.Bundler.SocketAddress.to_socket_address",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SocketAddress"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SolveFailure",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Source",
      "methods": [
        {
          "name": "bundler.Bundler.Source.add_dependency_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.cached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.can_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.dependency_names_to_double_check",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.double_check_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.extension_cache_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.identifier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.inspect",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.local",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.local_only",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.spec_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.unmet_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Source.version_message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SourceList",
      "methods": [
        {
          "name": "bundler.Bundler.SourceList.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.add_git_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.add_global_rubygems_remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.add_path_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.add_plugin_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.add_rubygems_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.aggregate_global_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.all_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.cached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.default_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.expired_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.get",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.global_rubygems_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.implicit_global_source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.local_only",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.lock_other_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.lock_rubygems_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.lock_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.merged_gem_lockfile_sections",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.non_default_explicit_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.non_global_rubygems_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.replace_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.rubygems_remotes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        },
        {
          "name": "bundler.Bundler.SourceList.rubygems_sources",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceList"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SourceMap",
      "methods": [
        {
          "name": "bundler.Bundler.SourceMap.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceMap"
          ]
        },
        {
          "name": "bundler.Bundler.SourceMap.all_requirements",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceMap"
          ]
        },
        {
          "name": "bundler.Bundler.SourceMap.direct_requirements",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceMap"
          ]
        },
        {
          "name": "bundler.Bundler.SourceMap.locked_requirements",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceMap"
          ]
        },
        {
          "name": "bundler.Bundler.SourceMap.pinned_spec_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SourceMap"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.SpecSet",
      "methods": [
        {
          "name": "bundler.Bundler.SpecSet.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.-",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.<<",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.[]",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.complete_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.delete",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.delete_by_name",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.each",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.empty",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.find_by_name_and_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.incomplete_for_platform",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.length",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.materialize",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.materialized_for_all_platforms",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.missing_specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.size",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.sort",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.to_a",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.to_hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.validate_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        },
        {
          "name": "bundler.Bundler.SpecSet.what_required",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.SpecSet"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Standalone",
      "methods": [
        {
          "name": "bundler.Bundler.Standalone.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Standalone"
          ]
        },
        {
          "name": "bundler.Bundler.Standalone.generate",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Standalone"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.StubSpecification",
      "methods": [
        {
          "name": "bundler.Bundler.StubSpecification.from_stub",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.activated",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.default_gem",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.full_gem_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.full_require_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.gem_build_complete_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.load_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.loaded_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.manually_installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.matches_for_glob",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.missing_extensions",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.raw_require_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.source",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        },
        {
          "name": "bundler.Bundler.StubSpecification.to_yaml",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.StubSpecification"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.TSort",
      "methods": [
        {
          "name": "bundler.Bundler.TSort.each_strongly_connected_component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.each_strongly_connected_component_from",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.strongly_connected_components",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.tsort",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.tsort_each",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.tsort_each_child",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        },
        {
          "name": "bundler.Bundler.TSort.tsort_each_node",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TSort"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.TemporaryResourceError",
      "methods": [
        {
          "name": "bundler.Bundler.TemporaryResourceError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.TemporaryResourceError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.ThreadCreationError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.UI",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URI",
      "methods": [
        {
          "name": "bundler.Bundler.URI.decode_uri_component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.decode_www_form",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.decode_www_form_component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.encode_uri_component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.encode_www_form",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.encode_www_form_component",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.join",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.parse",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.register_scheme",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.scheme_list",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        },
        {
          "name": "bundler.Bundler.URI.split",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URI"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URICredentialsFilter",
      "methods": [
        {
          "name": "bundler.Bundler.URICredentialsFilter.credential_filtered_string",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URICredentialsFilter"
          ]
        },
        {
          "name": "bundler.Bundler.URICredentialsFilter.credential_filtered_uri",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URICredentialsFilter"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.URINormalizer",
      "methods": [
        {
          "name": "bundler.Bundler.URINormalizer.normalize_suffix",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.URINormalizer"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.VirtualProtocolError",
      "methods": [
        {
          "name": "bundler.Bundler.VirtualProtocolError.message",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.VirtualProtocolError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Worker",
      "methods": [
        {
          "name": "bundler.Bundler.Worker.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Worker"
          ]
        },
        {
          "name": "bundler.Bundler.Worker.deq",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Worker"
          ]
        },
        {
          "name": "bundler.Bundler.Worker.enq",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Worker"
          ]
        },
        {
          "name": "bundler.Bundler.Worker.stop",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Worker"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.YAMLSerializer",
      "methods": [
        {
          "name": "bundler.Bundler.YAMLSerializer.convert_to_backward_compatible_key",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.YAMLSerializer"
          ]
        },
        {
          "name": "bundler.Bundler.YAMLSerializer.dump",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.YAMLSerializer"
          ]
        },
        {
          "name": "bundler.Bundler.YAMLSerializer.dump_hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.YAMLSerializer"
          ]
        },
        {
          "name": "bundler.Bundler.YAMLSerializer.load",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.YAMLSerializer"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.YamlSyntaxError",
      "methods": [
        {
          "name": "bundler.Bundler.YamlSyntaxError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.YamlSyntaxError"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Source.Rubygems": [
    {
      "name": "bundler.Bundler.Source.Rubygems.Remote",
      "methods": [
        {
          "name": "bundler.Bundler.Source.Rubygems.Remote.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems.Remote"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.Remote.cache_slug",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems.Remote"
          ]
        },
        {
          "name": "bundler.Bundler.Source.Rubygems.Remote.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Source.Rubygems.Remote"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.LockfileParser": [
    {
      "name": "bundler.Bundler.LockfileParser.Position",
      "methods": [
        {
          "name": "bundler.Bundler.LockfileParser.Position.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser.Position"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.Position.advance",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser.Position"
          ]
        },
        {
          "name": "bundler.Bundler.LockfileParser.Position.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.LockfileParser.Position"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Persistent": [
    {
      "name": "bundler.Bundler.Persistent.Net",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor.LineEditor.Readline": [
    {
      "name": "bundler.Bundler.Thor.LineEditor.Readline.PathCompletion",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.LineEditor.Readline.PathCompletion.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Readline.PathCompletion"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.LineEditor.Readline.PathCompletion.matches",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor.Readline.PathCompletion"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Dsl": [
    {
      "name": "bundler.Bundler.Dsl.DSLError",
      "methods": [
        {
          "name": "bundler.Bundler.Dsl.DSLError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl.DSLError"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.DSLError.contents",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl.DSLError"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.DSLError.status_code",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl.DSLError"
          ]
        },
        {
          "name": "bundler.Bundler.Dsl.DSLError.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Dsl.DSLError"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Plugin.API": [
    {
      "name": "bundler.Bundler.Plugin.API.Source",
      "methods": [
        {
          "name": "bundler.Bundler.Plugin.API.Source.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.add_dependency_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.app_cache_dirname",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.app_cache_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.cache",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.cached",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.can_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.double_check_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.eql",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.fetch_gemspec_files",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.gem_install_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.identifier",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.include",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.install_path",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.installed",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.local",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.options_to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.post_install",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.remote",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.spec_names",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.specs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.to_lock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.to_s",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.unlock",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.unmet_deps",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        },
        {
          "name": "bundler.Bundler.Plugin.API.Source.uri_hash",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Plugin.API.Source"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.UI": [
    {
      "name": "bundler.Bundler.UI.RGProxy",
      "methods": [
        {
          "name": "bundler.Bundler.UI.RGProxy.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.RGProxy"
          ]
        },
        {
          "name": "bundler.Bundler.UI.RGProxy.say",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.RGProxy"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.UI.Shell",
      "methods": [
        {
          "name": "bundler.Bundler.UI.Shell.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.add_color",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.ask",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.confirm",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.debug",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.info",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.level",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.no",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.quiet",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.silence",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.trace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.unprinted_warnings",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.warn",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Shell.yes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Shell"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.UI.Silent",
      "methods": [
        {
          "name": "bundler.Bundler.UI.Silent.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.add_color",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.ask",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.confirm",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.debug",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.error",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.info",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.level",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.no",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.quiet",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.silence",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.trace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.unprinted_warnings",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.warn",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        },
        {
          "name": "bundler.Bundler.UI.Silent.yes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.UI.Silent"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Thor": [
    {
      "name": "bundler.Bundler.Thor.Actions",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Actions.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.add_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.add_link",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.append_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.append_to_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.apply",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.chmod",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.comment_lines",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.copy_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.create_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.create_link",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.destination_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.directory",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.empty_directory",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.find_in_source_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.get",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.gsub_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.in_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.inject_into_class",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.inject_into_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.inject_into_module",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.insert_into_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.inside",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.link_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.prepend_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.prepend_to_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.relative_to_original_destination_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.remove_dir",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.remove_file",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.run_ruby_script",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.source_paths",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.template",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.thor",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Actions.uncomment_lines",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Actions"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.AmbiguousTaskError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.AmbiguousTaskError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.AtLeastOneRequiredArgumentError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Base",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Base.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.shell",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.subclass_files",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Base.subclasses",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Base"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Task",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Task.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.formatted_usage",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.hidden",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.DynamicTask",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.DynamicTask.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.DynamicTask"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.DynamicTask.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.DynamicTask"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.DynamicTask",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.DynamicTask.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.DynamicTask"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.DynamicTask.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.DynamicTask"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Error",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.ExclusiveArgumentError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Group",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Group.desc",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.help",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.invoke",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.invoke_from_option",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.printable_commands",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.printable_tasks",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Group.remove_invocation",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Group"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.HiddenTask",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.HiddenTask.hidden",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.HiddenTask"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.HiddenTask",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.HiddenTask.hidden",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.HiddenTask"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Invocation",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Invocation.current_command_chain",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Invocation"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Invocation.invoke",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Invocation"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Invocation.invoke_with_padding",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Invocation"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.InvocationError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.LineEditor",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.LineEditor.best_available",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.LineEditor.readline",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.LineEditor"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.MalformattedArgumentError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.NestedContext",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.NestedContext.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.NestedContext"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.NestedContext.enter",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.NestedContext"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.NestedContext.entered",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.NestedContext"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.RakeCompat",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.RakeCompat.included",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.RakeCompat"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.RakeCompat.rake_classes",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.RakeCompat"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.RequiredArgumentMissingError",
      "methods": [],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Shell",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Shell.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.shell",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Shell.with_padding",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Shell"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Task",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Task.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.formatted_usage",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.hidden",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Task.run",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Task"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.UndefinedTaskError",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.UndefinedTaskError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UndefinedTaskError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.UndefinedTaskError",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.UndefinedTaskError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UndefinedTaskError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.UnknownArgumentError",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.UnknownArgumentError.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.UnknownArgumentError"
          ]
        }
      ],
      "fields": []
    },
    {
      "name": "bundler.Bundler.Thor.Util",
      "methods": [
        {
          "name": "bundler.Bundler.Thor.Util.camel_case",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.escape_globs",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.escape_html",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.find_by_namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.find_class_and_command_by_namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.find_class_and_task_by_namespace",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.globs_for",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.load_thorfile",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.namespace_from_thor_class",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.namespaces_in_content",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.ruby_command",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.snake_case",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.thor_classes_in",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.thor_root",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.thor_root_glob",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        },
        {
          "name": "bundler.Bundler.Thor.Util.user_home",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Thor.Util"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Worker": [
    {
      "name": "bundler.Bundler.Worker.WrappedException",
      "methods": [
        {
          "name": "bundler.Bundler.Worker.WrappedException.new",
          "parameterTypes": [],
          "returnType": "ANY",
          "baseTypeFullName": [
            "bundler.Bundler.Worker.WrappedException"
          ]
        }
      ],
      "fields": []
    }
  ],
  "bundler.Bundler.Persistent.Net": [
    {
      "name": "bundler.Bundler.Persistent.Net.HTTP",
      "methods": [],
      "fields": []
    }
  ],
  "bundler.Gem.Net.HTTP.Persistent": [
    {
      "name": "bundler.Gem.Net.HTTP.Persistent.Error",
      "methods": [],
      "fields": []
    }
  ]
}